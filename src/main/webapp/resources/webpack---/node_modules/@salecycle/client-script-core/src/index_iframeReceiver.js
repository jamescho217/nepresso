import apiRequest from './api/request';
import * as browserCapabilities from './browser_capabilities';
import * as localStorageStoreFactory from './storage/localstorage';
import {
    listen
} from './message_channel/channels/postmessage/receiver';
import {
    getHandler as postmessage_getHandler
} from './message_channel/channels/postmessage/store_handler';
import {
    SafeJson
} from './browser_abstraction';
var browserCaps = browserCapabilities.getInitialCapabilities();
(function() {
    var localStore = localStorageStoreFactory.getStore(browserCaps);
    /* tslint:disable:align */
    // if we don't have a store - there's not much we can do
    if (!localStore) {
        var frameId = apiRequest.getQueryStringParameter('sc_frame_id');
        return window.parent.postMessage(SafeJson.stringify({
            error: 'FRAME_STORAGE_UNAVAILABLE',
            frameId: frameId
        }), '*');
    }
    /* tslint:enable:align */
    var storeHandler = postmessage_getHandler(localStore);
    listen(function(message, reply) {
        if (message.messageType === 'STORE') {
            return storeHandler.handleMessage(message, reply);
        }
        // just return if it's not a store message
        reply();
    });
})();



//////////////////
// WEBPACK FOOTER
// ./node_modules/@salecycle/client-script-core/src/index_iframeReceiver.js
// module id = 4
// module chunks = 0