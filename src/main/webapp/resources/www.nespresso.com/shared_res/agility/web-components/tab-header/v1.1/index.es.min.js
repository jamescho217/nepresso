// tab-header 1.0.0 6/1/2021 11:13:01 PM
class t extends HTMLElement {
    constructor() {
        super()
    }
    renderTabHeader() {
        const t = this.getAttribute("tab_img"),
            e = this.getAttribute("tab_img_light"),
            a = this.getAttribute("tab_img__act"),
            i = this.getAttribute("tab_img_light__act"),
            n = this.getAttribute("tab_title"),
            s = this.getAttribute("tab_panel"),
            r = this.getAttribute("contrast");
        return `\n            <button class="tablinks" data-panel="${s}" role="tab" aria-controls="${n}" id="${s}" title="${n}">\n                <div class="n-shuffler">\n                    <div class="n-shuffler-panel">\n                        <img loading=lazy src="${"dark"==r?e:t}" alt="" title="" width="40px" height="40px" />\n                        <img loading=lazy class="img__act" src="${"dark"===r?i:a}" alt="" title="" width="40px" height="40px" />\n                    </div>\n                </div>\n                <span>${n}</span>\n            </button>\n        `
    }
    render() {
        this.innerHTML = "" + this.renderTabHeader()
    }
    connectedCallback() {
        this.render()
    }
}
customElements.get("n-tab-header") || customElements.define("n-tab-header", t);
export default t;