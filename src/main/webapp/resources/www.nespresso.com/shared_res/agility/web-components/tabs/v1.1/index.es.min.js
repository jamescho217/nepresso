// tabs 1.0.0 6/1/2021 11:13:01 PM
let t;
class e extends HTMLElement {
    constructor() {
        super(), t = this.innerHTML
    }
    render() {
        this.innerHTML = "", this.classList.add("c-tab__panel"), this.setAttribute("role", "tablist"), this.innerHTML = t
    }
    bindEvent() {
        this.tabLinks.length && (Array.from(this.tabLinks).forEach(t => {
            t.addEventListener("click", t => {
                this.tabClick(t)
            })
        }), this.tabLinks[0].click())
    }
    connectedCallback() {
        this.render(), setTimeout(() => {
            this.tabLinks = this.querySelectorAll(".tablinks"), this.bindEvent()
        }, 250)
    }
    tabClick(t) {
        const e = t.target.dataset.panel;
        this.tabContent = this.querySelectorAll(".tabcontent");
        for (let t = 0; t < this.tabContent.length; t++) this.tabContent[t].style.display = "none", this.tabContent[t].setAttribute("aria-hidden", "true");
        for (let t = 0; t < this.tabLinks.length; t++) this.tabLinks[t].classList.remove("active"), this.tabLinks[t].setAttribute("aria-selected", "false");
        t.currentTarget.classList.add("active"), t.currentTarget.setAttribute("aria-selected", "true");
        const s = this.querySelector(`[data-id=${e}]`);
        s && (s.style.display = "block", s.setAttribute("aria-hidden", "false"), (({
            eventName: t,
            args: e,
            element: s
        }) => {
            let n;
            s = s || window, e ? n = new CustomEvent(t, {
                detail: e,
                bubbles: !0
            }) : "function" == typeof Event ? n = new Event(t) : (n = document.createEvent("Event"), n.initEvent(t, !0, !0)), s.dispatchEvent(n)
        })({
            eventName: "EVENT_TAB_CHANGE",
            args: {
                panel: e
            }
        }))
    }
    disconnectedCallback() {
        this.tabLinks.length && Array.from(this.tabLinks).forEach(t => {
            t.removeEventListener("click", t => {
                this.tabClick(t)
            })
        })
    }
}
customElements.get("n-tabs") || customElements.define("n-tabs", e);
export default e;