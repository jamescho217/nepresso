// cta 1.1.2 6/1/2021 11:13:01 PM
class t {
    constructor() {
        this._bus = document.createElement("div")
    }
    register(t, i) {
        this._bus.addEventListener(t, i)
    }
    remove(t, i) {
        this._bus.removeEventListener(t, i)
    }
    fire(t, i = {}) {
        this._bus.dispatchEvent(new CustomEvent(t, {
            detail: i
        }))
    }
}
if (!i) var i = new t;
class e extends HTMLElement {
    constructor() {
        super(), this.isMobile = window.innerWidth < 750, this.TXT_CLASS = "c-Cta__text__", this.TXT_SIZES = ["xl", "l", "m", "s", "xs"], this.slot = this.innerHTML, this.size = null, this.sizeMobile = this.size, this.eventId = null, this.link = null, this.target = null, this.look = null, this.icon = !1, this.lookInline = null, this.popinId = null, this.campaign_id = null, this.campaign_name = null, this.campaign_position = null, this.campaign_creative = null, this.tracking = null
    }
    static get observedAttributes() {
        return ["popin_id", "look", "look_inline", "link", "target", "size", "size_mobile", "icon", "event_id"]
    }
    attributeChangedCallback() {
        this.init()
    }
    connectedCallback() {
        this.init(), this.addEventListener("click", this.handleClick.bind(this))
    }
    init() {
        this.size = this.getAttribute("size") || this.size, this.sizeMobile = this.getAttribute("size_mobile") || this.size, this.eventId = this.getAttribute("event_id") || this.eventId, this.link = this.getAttribute("link") || this.link, this.target = this.getAttribute("target") || this.target, this.look = this.getAttribute("look") || this.look, this.icon = "true" === this.getAttribute("icon"), this.lookInline = this.getAttribute("look_inline") || this.lookInline, this.popinId = this.getAttribute("popin_id") || this.popinId, this.campaign_id = this.getAttribute("campaign_id") || this.campaign_id, this.campaign_name = this.getAttribute("campaign_name") || this.campaign_name, this.campaign_position = this.getAttribute("campaign_position") || this.campaign_position, this.campaign_creative = this.getAttribute("campaign_creative") || this.campaign_creative, this.tracking = this.getAttribute("tracking") || this.tracking, this.render()
    }
    render() {
        let t = {};
        this.link ? (t = document.createElement("a"), t.setAttribute("href", this.link), t.setAttribute("target", this.target || "_self"), t.tabIndex = 0) : t = document.createElement("button"), t.setAttribute("title", (t => {
            if (!t) return !1;
            let i = t;
            if (window.DOMParser) {
                i = (new DOMParser).parseFromString(t, "text/html").body.textContent
            }
            return i
        })(this.slot)), this.getClassNames().map(i => {
            t.classList.add(i)
        }), t.classList.add("c-Cta"), t.innerHTML = `${this.renderSlot()}\n                          ${this.renderIcon()}`, this.innerHTML = t.outerHTML, this.querySelectorAll(".c-Cta").length > 1 && this.removeChild(this.childNodes[0])
    }
    renderSlot() {
        return this.slot ? `<span class="c-Cta__text ${this.getLevel()}">${this.slot}</span>` : ""
    }
    renderIcon() {
        if (!this.hasIcon()) return "";
        const t = "svg-" + function(t) {
            for (var i = "", e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = e.length, s = 0; s < t; s++) i += e.charAt(Math.floor(Math.random() * n));
            return i
        }(5);
        return `<svg class="c-Cta__text__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640" width="10" height="10" aria-labelledby="${t}">\n            <title id="${t}">${this.link}</title><path d="M414.4 342.624L437.024 320 256 138.976l-45.248 45.248L346.496 320 210.752 455.776 256 501.024l158.4-158.4z"/>\n            </svg>`
    }
    hasIcon() {
        return ("link" === this.look || "link-gold" === this.look || "AddToCart_small" === this.look) && !1 !== this.icon
    }
    getLevel() {
        const t = this.isMobile ? this.sizeMobile : this.size,
            i = this.TXT_SIZES[t - 1];
        return `${this.TXT_CLASS}${i}`
    }
    getClassNames() {
        const t = [];
        return "subtle" === this.look && t.push("c-Cta--subtle"), "link" !== this.look && "link-underline" !== this.look && "link-gold" !== this.look || (t.push("c-Cta--link"), t.push("c-Cta--light")), "link-underline" === this.look && t.push("c-Cta--underline"), "AddToCart_small" === this.look && t.push("c-Cta--addToCart_small"), "AddToCart_large" === this.look && t.push("c-Cta--addToCart_large"), "link-gold" === this.look && t.push("c-Cta--gold"), "primary_transparent" === this.look && t.push("c-Cta--primary-transparent"), "3d_white" === this.look && (t.push("c-Cta-3d-white"), t.push("c-Cta--addToCart_large")), 0 === t.length && t.push("c-Cta--primary"), this.lookInline && t.push("c-Cta--inline"), t
    }
    handleClick() {
        this.track(), this.eventId && i.fire(this.eventId, {}), this.popinId && this.popin()
    }
    popin() {
        (({
            eventName: t,
            args: i,
            element: e
        }) => {
            let n;
            e = e || window, i ? n = new CustomEvent(t, {
                detail: i,
                bubbles: !0
            }) : "function" == typeof Event ? n = new Event(t) : (n = document.createEvent("Event"), n.initEvent(t, !0, !0)), e.dispatchEvent(n)
        })({
            eventName: "WEB_COMPONENT_POPIN_OPEN",
            args: {
                id: this.popinId
            }
        })
    }
    handlePromoClick() {
        window.gtmDataObject = window.gtmDataObject || [], window.gtmDataObject.push({
            event: "promoClick",
            eventRaisedBy: "Web component",
            eventCategory: "User Engagement",
            eventAction: "Click",
            ecommerce: {
                promoClick: {
                    promotions: [{
                        id: this.campaign_id,
                        name: this.campaign_name,
                        position: this.campaign_position,
                        creative: this.campaign_creative
                    }]
                }
            }
        })
    }
    handleCustomEvent() {
        window.gtmDataObject = window.gtmDataObject || [], window.gtmDataObject.push({
            event: "customEvent",
            eventRaisedBy: "Web component",
            eventCategory: "User Engagement",
            eventAction: "Click CTA",
            eventLabel: this.tracking,
            nonInteraction: 0
        })
    }
    track() {
        this.campaign_id && this.handlePromoClick(), this.tracking && this.handleCustomEvent()
    }
    disconnectedCallback() {
        this.removeEventListener("click", this.handleClick.bind(this)), i.remove(this.eventId)
    }
}
customElements.get("n-cta") || customElements.define("n-cta", e);
export default e;